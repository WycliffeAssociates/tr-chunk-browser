buildscript {
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    }

    dependencies {
        classpath 'edu.sc.seis.gradle:launch4j:2.4.6'
    }
}

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.3.50'
    id 'org.openjfx.javafxplugin' version '0.0.8'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
}

apply plugin: 'idea'
apply plugin: 'application'
apply plugin: 'edu.sc.seis.launch4j'

javafx {
    version = '11'
    modules = [ 'javafx.controls' ]
}

group 'com.matthewrussell'
version '0.1.8'

repositories {
    mavenCentral()
    jcenter()
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.50"
    implementation "io.reactivex.rxjava2:rxkotlin:2.4.0"
    implementation 'com.github.thomasnield:rxkotlinfx:2.2.2'
    implementation 'com.github.WycliffeAssociates:tr-wav:0.2.7'
    implementation 'no.tornado:tornadofx:1.7.19'
    implementation 'org.apache.commons:commons-configuration2:2.6'
    implementation 'commons-beanutils:commons-beanutils:1.9.3'

    //OpenJFX cross-platform fat jar dependencies
    runtimeOnly "org.openjfx:javafx-graphics:0.0.8:win"
    runtimeOnly "org.openjfx:javafx-graphics:0.0.8:linux"
    runtimeOnly "org.openjfx:javafx-graphics:0.0.8:mac"

    //FontAwesomeFX
    implementation "de.jensd:fontawesomefx-commons:9.1.2"
    implementation "de.jensd:fontawesomefx-materialicons:2.2.0-9.1.2"
    implementation 'com.jfoenix:jfoenix:9.0.9'
    testImplementation group: 'junit', name: 'junit', version: '4.12'
}

application {
    mainClassName = "com.matthewrussell.trchunkbrowser.app.MainKt"
}

sourceCompatibility = 11

compileKotlin {
    kotlinOptions.jvmTarget = "11"
    kotlinOptions.allWarningsAsErrors = true
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "11"
    kotlinOptions.allWarningsAsErrors = true
}

shadowJar {
    archiveFileName = "${rootProject.name}.jar"
    mergeServiceFiles()
    manifest {
        attributes(
                'Main-Class': "com.matthewrussell.trchunkbrowser.app.MainKt"
        )
    }
}

task copyJre(type: Copy) {
    if (project.hasProperty("jrePath")) {
        from jrePath
        into "${buildDir}/launch4j/jre"
    }
}

launch4j {
    outfile = "${rootProject.name}.exe"
    mainClassName = project.mainClassName
    bundledJrePath = "jre"
    bundledJre64Bit = true
    jdkPreference = 'jdkOnly'
    icon = "${projectDir}/launcher.ico"
    jar = "${buildDir}/libs/${rootProject.name}.jar"
    productName = rootProject.name
}

project.tasks.createExe.dependsOn copyJre
project.tasks.createExe.dependsOn shadowJar
